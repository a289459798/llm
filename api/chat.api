syntax = "v1"

type(
    IntroduceRequest {
        Name string `json:"name"`
        Native string `json:"native"`
        Interest string `json:"interest"`
        Way string `json:"way,optional"`
        Content string `json:"content,optional"`
    }

    SalaryRequest {
        Content string `json:"content"`
    }

    RejectRequest {
        Type string `json:"type"`
        Way string `json:"way"`
        Content string `json:"content"`
    }

    PursueRequest {
        Content string `json:"content"`
    }

    ChatResponse {
        Data string `json:"data"`
    }
)

@server(
    jwt: Auth
    middleware: AuthAndUse
    group: chat
)
service tools {
    @handler introduce
    post /chat/introduce (IntroduceRequest) returns (ChatResponse)

    @handler salary
    post /chat/salary (SalaryRequest) returns (ChatResponse)

    @handler reject
    post /chat/reject (RejectRequest) returns (ChatResponse)

    @handler pursue
    post /chat/pursue (PursueRequest) returns (ChatResponse)
}

type (
    ChatRequest {
        ChatId string `json:"chatId"`
        TemplateId uint32 `json:"templateId"`
        Message string `json:"message"`
    }

    ChatHistoryResponse {
        ChatId string `json:"chatId"`
        History []ChatHistory `json:"history"`
    }

    ChatHistory{
        Q string `json:"q"`
        A string `json:"a"`
    }

    ChatTemplateResponse {
        List []ChatTemplate `json:"list"`
    }

    ChatTemplate {
        TemplateId uint32 `json:"templateId"`
        Message string `json:"message"`
    }

    ChatTemplateRequest {
        Type string `json:"type,optional"`
    }

)

@server(
    jwt: Auth
    middleware: Sign
    group: chat/brain
)
service tools {
    @handler chatHistory
    get /chat/chat/history returns (ChatHistoryResponse)

    @handler chatTemplate
    get /chat/chat/template(ChatTemplateRequest) returns (ChatTemplateResponse)
}

@server(
    jwt: Auth
    middleware: AuthAndUse
    group: chat/brain
)
service tools {
    @handler chat
    post /chat/chat (ChatRequest) returns (ChatResponse)
}