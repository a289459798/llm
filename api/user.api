syntax = "v1"

type LoginRequest {
    Code string `json:"code"`
}

type InfoRequest {
}

type InfoResponse {
    Token string `json:"token"`
    Amount uint32 `json:"amount"`
    Uid uint32 `json:"uid"`
    OpenId string `json:"openId"`
}

type Task {
    Title string `json:"title"`
    Status bool `json:"status"`
    Total int `json:"total"`
    CompleteNumber int `json:"completeNumber"`
    Type string `json:"type"`
    Amount int `json:"amount"`
    Max int `json:"max"`
}

type TaskResponse {
    Content string `json:"content"`
    List []Task `json:"list"`
    Max int `json:"max"`
    Have int `json:"have"`
    Tips string `json:"tips"`
}

type TaskCompleteResponse {
    Total uint32 `json:"total"`
    Amount uint32 `json:"amount"`
}

type TaskRequest {
    Type string `json:"type,options=share|ad"`
}

type TaskShareFollowRequest {
    OpenId string  `json:"openId"`
}

@server(
    group: user
)
service tools {
    @handler login
    post /users/login (LoginRequest) returns (InfoResponse)
}

@server(
    jwt: Auth
    group: user
)
service tools {
    @handler userInfo
    get /users (InfoRequest) returns (InfoResponse)
}

@server(
    jwt: Auth
    middleware: Sign
    group: user/task
)
service tools {
    @handler taskList
    get /users/tasks (InfoRequest) returns (TaskResponse)

    @handler taskComplete
    post /users/tasks (TaskRequest) returns (TaskCompleteResponse)

    @handler taskShareFollow
    post /users/tasks/follow (TaskShareFollowRequest) returns (TaskResponse)
}